# default windows
screen -t home         1 sh -c 'cd ~;$SHELL'
screen -t shell        2 $SHELL
screen -t menu         3 sh -c 'while :;do myssh;sleep 1;done;$SHELL'
screen -t menu         4 sh -c 'while :;do myssh;sleep 1;done;$SHELL'
screen -t menu         5 sh -c 'while :;do myssh;sleep 1;done;$SHELL'
screen -t menu         6 sh -c 'while :;do myssh;sleep 1;done;$SHELL'
screen -t menu         7 sh -c 'while :;do myssh;sleep 1;done;$SHELL'
screen -t menu         8 sh -c 'while :;do myssh;sleep 1;done;$SHELL'
screen -t menu         9 sh -c 'while :;do myssh;sleep 1;done;$SHELL'
# Remap control+a
escape ^Xx
# set session name
#sessionname casjaysdevdocker
# search | name for dynamic window titles
shelltitle '$|bash'
# Detect activity in new windows
defmonitor on
# Turn your hardstatus line into a dynamic urxvt|xterm|aterm window title
backtick 1 5 5 true
attrcolor b ".I"
term "xterm-256color"
defbce on
# Always start `screen` with UTF-8 enabled (`screen -U`)
defutf8 on
# Set the window titles
caption never
caption string "%n %t"
# Set the status bar
hardstatus alwayslastline
hardstatus string '%{= Kd} %{= Kd}%-w%{= Kr}[%{= KW}%n %t%{= Kr}]%{= Kd}%+w %-= %{KG} %H%{KW} | %?%{KY}LSF: %101`%{KW} | %?%D %M %d %Y%{= Kc} %C%A%{-}'
# huge scrollback buffer
defscrollback 5000
# welcome message
startup_message off
# Display notification when bell is detected for a window
bell_msg "Bell detected in %t (%n)!"
activity "Activity detected in %t (%n)!"
# Fix for residual editor text
altscreen on
# print wackier status messages
nethack on
# mouse tracking allows to switch region focus by clicking
mousetrack off
# window numbering starts at 1 not 0
select 1
bind c screen 1
# get rid of silly xoff stuff
bind s split
# layouts
layout autosave on
layout new one
layout attach one
layout select one
# use hjkl keys to resize regions
bind -c rsz h eval "resize -h -5" "command -c rsz"
bind -c rsz j eval "resize -v -5" "command -c rsz"
bind -c rsz k eval "resize -v +5" "command -c rsz"
bind -c rsz l eval "resize -h +5" "command -c rsz"
# quickly switch between regions using tab and arrows
bind -c rsz \t    eval "focus"       "command -c rsz" # Tab
bind -c rsz -k kl eval "focus left"  "command -c rsz" # Left
bind -c rsz -k kr eval "focus right" "command -c rsz" # Right
bind -c rsz -k ku eval "focus up"    "command -c rsz" # Up
bind -c rsz -k kd eval "focus down"  "command -c rsz" # Down
# You can use "showkey -a" to capture the key definitions for your terminal.
bindkey "^[OR" prev         # F3 = previous window
bindkey "^[OS" next         # F4 = next window
bindkey "^[[1;2C" next      # shift+right_arrow
bindkey "^[[1;2D" prev      # shift+left_arrow
bindkey "^[[A" focus top    # ctrl+up_arrow = large top area
bindkey "^[[B" focus down   # ctrl+down_arrow = bottom-left area
bindkey "^[[C" focus bottom # ctrl+right_arrow = bottom-right area
bindkey "^[[D" focus left   # ctrl+left_arrow = back to bottom-left area from bottom-right area
# Finally! Shift-pg up or down to view scrollback buffer
bindkey "^[[5;2~" eval "copy" "stuff ^u"
bindkey -m "^[[5;2~" stuff ^u
bindkey -m "^[[6;2~" stuff ^d
# Mouse scrolling
# Scroll up
bindkey -d "^[[5S" eval copy "stuff 5\025"
bindkey -m "^[[5S" stuff 5\025
# Scroll down
bindkey -d "^[[5T" eval copy "stuff 5\004"
bindkey -m "^[[5T" stuff 5\004
# Scroll up more
bindkey -d "^[[25S" eval copy "stuff \025"
bindkey -m "^[[25S" stuff \025
# Scroll down more
bindkey -d "^[[25T" eval copy "stuff \004"
bindkey -m "^[[25T" stuff \004
